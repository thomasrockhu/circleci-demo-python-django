version: 2.1
orbs:
  codecov:
    description: Provides a command for reporting code coverage to Codecov.  The token will be read from $CODECOV_TOKEN by default, but this can be overridden using the `token` parameter
    commands:
      upload:
        parameters:
          file:
            description: Path to the code coverage data file to upload.
            type: string
          flags:
            description: Flag the upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
            type: string
            default: ""
          token:
            description: The API token to use for uploading to Codecov.
            type: string
            default: $CODECOV_TOKEN
          upload-name:
            description: Custom defined name of the upload. Visible in Codecov UI
            type: string
            default: ""
        steps:
          - run:
              name: Upload coverage results
              command: |
                curl --request POST --retry 3 --silent --show-error --fail \
                --data-binary @<< parameters.file >> \
                "https://codecov.io/upload/v2?service=circleci\
                &branch=$CIRCLE_BRANCH\
                &build=$CIRCLE_BUILD_NUM\
                &build_url=$CIRCLE_BUILD_URL\
                &commit=$CIRCLE_SHA1\
                &flags=<< parameters.flags >>\
                &job=$CIRCLE_NODE_INDEX\
                &name=<< parameters.upload-name >>\
                &pr=$CIRCLE_PR_NUMBER\
                &token=<< parameters.token >>"
jobs:
  build:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run:
          command: |
            pipenv run "python manage.py test"
      - store_test_results:
          path: test-results
      - codecov/upload:
          file: ./test-results
      - store_artifacts:
          path: test-results
          destination: tr1
